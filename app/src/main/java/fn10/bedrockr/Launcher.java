/*
 * This source file was generated by the Gradle 'init' task
 */
package fn10.bedrockr;

import fn10.bedrockr.utils.ErrorShower;
import fn10.bedrockr.utils.RFileOperations;
import fn10.bedrockr.utils.logging.RLogFilter;
import fn10.bedrockr.utils.logging.RLogFormatter;
import fn10.bedrockr.utils.logging.RLogHandler;
import fn10.bedrockr.windows.RLaunchPage;
import fn10.bedrockr.windows.laf.BedrockrDark;

import java.awt.*;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.logging.*;

import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import com.formdev.flatlaf.FlatLaf;

public class Launcher {

    public static String VERSION = "a1.0";
    public static ImageIcon ICON = new ImageIcon(Launcher.class.getResource("/ui/Icon.png"));

    public static Dimension LAUNCH_WINDOW_SIZE = new Dimension(600, 400);
    public static Logger LOG = Logger.getLogger("bedrockR");

    public static void main(String[] args) {
        // set up logging
        String logloc = RFileOperations.getBaseDirectory(null, "\\logs").getAbsolutePath() + "\\bedrockR-log-"
                + System.currentTimeMillis() + ".log";

        for (var h : LOG.getHandlers()) {
            LOG.removeHandler(h);
            h.close();
        }
        LOG.setUseParentHandlers(false);
        LOG.setLevel(Level.FINE);
        LOG.addHandler(new RLogHandler());

        // try to add file handler
        try {

            Handler fileHandler = new FileHandler(logloc, 2000, 1, true);
            fileHandler.setFormatter(new RLogFormatter());
            fileHandler.setFilter(new RLogFilter());
            LOG.addHandler(fileHandler);
        } catch (SecurityException | IOException e) {
            e.printStackTrace();
        }

        Runtime.getRuntime().addShutdownHook(new Thread() {
            public void run() {
                for (var h : LOG.getHandlers()) {
                    // LOG.removeHandler(h);
                    h.close();
                }
            }
        });

        // log stuff
        LOG.info("Logging to " + logloc);
        LOG.info(RFileOperations.getBaseDirectory(null).getAbsolutePath());
        LOG.info(MessageFormat.format("bedrockR version: {0}, Java version: {1}, JVM: {2}", VERSION, Runtime.version(),
                System.getProperty("java.vm.name")));

        // setup theme

        FlatLaf.registerCustomDefaultsSource("fn10.bedrockr.windows.laf");

        try {
            LOG.info(String.valueOf(BedrockrDark.setup()));
        } catch (Exception e) {
            e.printStackTrace();
            ErrorShower.showError(null, "failed to load theme " + e.getCause().toString(), "FlatLaf Error", e);
        }
        // LOG.info(UIManager.getLookAndFeel().toString());

        // open app
        SwingUtilities.invokeLater(() -> {
            var launch = new RLaunchPage(LAUNCH_WINDOW_SIZE);
            launch.setVisible(true);
        });
    }
}
