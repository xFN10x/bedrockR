/*
 * This source file was generated by the Gradle 'init' task
 */
package fn10.bedrockr;

import com.formdev.flatlaf.FlatLaf;

import fn10.bedrockr.util.logging.RLogFilter;
import fn10.bedrockr.util.logging.RLogFormatter;
import fn10.bedrockr.util.logging.RLogHandler;
import fn10.bedrockr.windows.RLaunchPage;
import fn10.bedrockr.windows.laf.BedrockrDark;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.util.logging.*;

public class bedrockRLauncher {

    public static String VERSION = "a1.0";

    public static Dimension LAUNCH_WINDOW_SIZE = new Dimension(600, 400);
    public static Logger LOG = Logger.getLogger("bedrockR");

    public static void main(String[] args) {
        //set up logging
        String logloc = System.getProperty("java.io.tmpdir")
                    + System.currentTimeMillis() + "\\bedrockR-log" + System.currentTimeMillis() + ".txt";
        
        for (var h : LOG.getHandlers()) {
            LOG.removeHandler(h);
        }
        LOG.setUseParentHandlers(false);
        LOG.setLevel(Level.FINE);
        LOG.addHandler(new RLogHandler());

        //try to add file handler
        try { 
            
            Handler fileHandler = new FileHandler(logloc, 2000, 5);
            fileHandler.setFormatter(new RLogFormatter());
            LOG.addHandler(fileHandler);

            fileHandler.setFilter(new RLogFilter());
        } catch (SecurityException | IOException e) {
            e.printStackTrace();
        }

        //log stuff
        LOG.info(RLaunchPage.GetGreeting());
        LOG.info("Logging to "+logloc);
        LOG.info(
                "bedrockR version: ${VERSION}, Java version: ${Runtime.version()}, JVM ${System.getProperty(\"java.vm.name\")}");

        //setup theme
        File font_file = new File(bedrockRLauncher.class.getResource("/branding/font.otf").getPath());
        Font font = null;
        try { //try setting font
            font = Font.createFont(Font.TRUETYPE_FONT, font_file);
        } catch (IOException | FontFormatException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        if (font != null)
        GraphicsEnvironment.getLocalGraphicsEnvironment().registerFont(font); //reg font if not null

        FlatLaf.registerCustomDefaultsSource("");
        BedrockrDark.setup();

        //open app
        var launchPage = new RLaunchPage(LAUNCH_WINDOW_SIZE);

        launchPage.setVisible(true);
    }
}
