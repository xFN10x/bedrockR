/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */



plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}



dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    
    //gson
    implementation 'com.google.code.gson:gson:2.13.1'
    //flatlaf
    def flatlafVersion = '3.6'
    implementation( "com.formdev:flatlaf:${flatlafVersion}" )
    //implementation( "com.formdev:flatlaf:${flatlafVersion}" )
    //implementation( "com.formdev:flatlaf:${flatlafVersion}:linux-x86_64@so" )
    //implementation( "com.formdev:flatlaf:${flatlafVersion}:macos-arm64@dylib" )
    //implementation( "com.formdev:flatlaf:${flatlafVersion}:macos-x86_64@dylib" )
    //implementation( "com.formdev:flatlaf:${flatlafVersion}:windows-x86_64@dll" )
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'fn10.bedrockr.Launcher'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
